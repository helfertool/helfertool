# Settings for supervisord
[unix_http_server]
file=/helfertool/run/supervisord.sock
chmod = 0700
username = helfertool
password = will_be_replaced  # check /helfertool/run/supervisord.conf for password

[supervisord]
nodaemon=false
loglevel=info
logfile=/dev/null
logfile_maxbytes=0
pidfile=/helfertool/run/supervisord.pid
minfds=1024
minprocs=200
childlogdir=/helfertool/run/supervisord

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# Settings for supervisorctl
[supervisorctl]
serverurl=unix:///helfertool/run/supervisord.sock
username = helfertool
password = will_be_replaced  # check /helfertool/run/supervisord.conf for password

# Started services

# Note about logging: The output of the single services is written to log files, which are only
# stored in the container. Writing them to stdout (and therefore to the Docker log) is not that
# easy as the container is started as root, but supervisord does not run as root (-> permission denied on /dev/stdout)
# These log files are only for debugging. The Helfertool log is written to files outside of the container and
# access logs should be written by the reverse proxy running outside of the container.
[program:rsyslog]
command=rsyslogd -f /helfertool/etc/rsyslog.conf -i /helfertool/run/rsyslog.pid -n
autostart=true
autorestart=true
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stdout_logfile_backups=2
stderr_logfile_backups=2
priority=10

[program:celery]
command=celery -A helfertool worker -c %(ENV_HELFERTOOL_TASK_WORKERS)s --pidfile=/helfertool/run/celery.pid
directory=/helfertool/src
autostart=true
autorestart=true
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stdout_logfile_backups=2
stderr_logfile_backups=2
priority=20

[program:celerybeat]
command=celery -A helfertool beat --schedule=/data/tmp/celerybeat-schedule --pidfile=/helfertool/run/celerybeat.pid
directory=/helfertool/src
autostart=true
autorestart=true
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stdout_logfile_backups=2
stderr_logfile_backups=2
priority=30

[program:uwsgi]
command=uwsgi --ini /helfertool/etc/uwsgi.conf --workers %(ENV_HELFERTOOL_WORKERS)s
autostart=true
autorestart=true
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stdout_logfile_backups=2
stderr_logfile_backups=2
priority=40

[program:nginx]
command=nginx -c /helfertool/etc/nginx.conf
autostart=true
autorestart=true
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stdout_logfile_backups=2
stderr_logfile_backups=2
priority=50
